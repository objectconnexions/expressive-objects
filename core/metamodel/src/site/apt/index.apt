~~  Licensed to the Apache Software Foundation (ASF) under one
~~  or more contributor license agreements.  See the NOTICE file
~~  distributed with this work for additional information
~~  regarding copyright ownership.  The ASF licenses this file
~~  to you under the Apache License, Version 2.0 (the
~~  "License"); you may not use this file except in compliance
~~  with the License.  You may obtain a copy of the License at
~~
~~        http://www.apache.org/licenses/LICENSE-2.0
~~
~~  Unless required by applicable law or agreed to in writing,
~~  software distributed under the License is distributed on an
~~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~  KIND, either express or implied.  See the License for the
~~  specific language governing permissions and limitations
~~  under the License.


Commons

 The <core commons> module provides a set of common utilities and language 
 extensions for use across the rest of the framework.
 
 It also defines a number of small APIs that are used throughout:
 
 * a set of interfaces for defining <<<Component>>>s and their scope
 
 * a debug framework
 
 * an <<<Ensure>>> API
 
 * a set of {{{http://code.google.com/p/hamcrest}Hamcrest}} <<<Matcher>>>s
 
 * a <<<ResourceStream>>> API  
 
 * a <<<Filter>>> API
 
 * a <<<Future>>> API

 []


MetaModel

 The <core metamodel> module defines the interfaces and classes that make 
 up the <Expressive Objects> metamodel.  
 
 The metamodel is used in numerous ways, including:
 
 * by {{{../../viewer/index.html}viewers}} to obtain information about the 
   domain objects, so that they can be rendered in a generic object-oriented 
   user interface;
   
 * by the {{{../../runtimes/dflt/objectstores/index.html}object stores}} 
   to determine which data is to be persisted;
   
 * by {{{../../runtimes/dflt/remoting/index.html}remoting}}, to marshall
   domain objects automatically between different tiers; 
 
 * by the {{{../runtime/index.html}core runtime}}, to provide the ability to provide
   XML Snapshots (through the <<<XmlSnapshot>>> utility class).
 
 []
 
 The <metamodel> module does not itself define the programming model 
 conventions; that is the responsibility of the 
 {{{../progmodel/index.html}core progmodel}}.


ProgModel

 The <core progmodel> provides a set of reusable elements (implementations of
 the <<<FacetFactory>>> API) that can be reused to make up a programming model.
 
 Most of those within <this> module are in fact used in the
 default programming model, defined by the 
 {{{../../progmodels/dflt/index.html}default progmodel}} module.  They are
 defined within core, however, to allow custom programming models (perhaps
 extending or trimming back the default programming model) to be defined.


Runtime

 The <core runtime> module defines a set of APIs common across
 all runtime implementations.


Webapp

 The <core webapp> module provides a set of reusable servlets and filters 
 that can be reused in any deployment irrespective of runtime implementation.



Documentation

 See the {{{../index.html}core}} documentation 
 ({{{../docbkx/html/guide/expressive-objects-core.html}HTML}} or 
 {{{../docbkx/pdf/expressive-objects-core.pdf}PDF}}).
 
