~~  Licensed to the Apache Software Foundation (ASF) under one
~~  or more contributor license agreements.  See the NOTICE file
~~  distributed with this work for additional information
~~  regarding copyright ownership.  The ASF licenses this file
~~  to you under the Apache License, Version 2.0 (the
~~  "License"); you may not use this file except in compliance
~~  with the License.  You may obtain a copy of the License at
~~
~~        http://www.apache.org/licenses/LICENSE-2.0
~~
~~  Unless required by applicable law or agreed to in writing,
~~  software distributed under the License is distributed on an
~~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~  KIND, either express or implied.  See the License for the
~~  specific language governing permissions and limitations
~~  under the License.

Deploy <ExpressiveObjects> as an auto-generated webapp

  One of the original motivations for Expressive Objects itself was to be able 
  automatically generate a user interface for a domain object model.
  
  The {{{../viewer/html/index.html}HTML viewer}} provides a straight-forward 
  webapp for a domain model, but is one that nonetheless provides access and 
  honours all of the business logic that may be encoded within those domain objects.  
  The HTML viewer makes minimal use of Javascript, as it was originally written
  to comply with governmental standards that forbid the use of such.  The
  viewer supports customization only to the extent that its CSS can be changed.

  If you need something a little more sophisticated, then the 
  {{{../viewer/scimpi/index.html}Scimpi viewer}} provides a similar webapp user interface,
  but one that allows the views of objects to be progressively enhanced as required.
  The programming model is akin to JSF, with a set of tags indicating the contents
  of the custom views.
  
* {Expressive Objects persistence}

  The easiest way to deploy Expressive Objects with the HTML viewer is using ExpressiveObjects' own persistence
  mechanisms.  These are provided by the {{{../runtimes/dflt/index.html}default runtime}}, and
  offer in turn a number of {{{../runtimes/dflt/objectstores/index.html}object stores}}.

* {Custom persistence}

  Expressive Objects persistence API is pluggable, so if it does not provide the integration already then
  you could implementing to its object store API.
   
* {Other Viewers}

  Note that Expressive Objects does have a number of other (human-usable) viewers.  See 
  {{{../viewer/index.html#Other_viewers}other viewers}} for details. 
  
